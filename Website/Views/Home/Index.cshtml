@{
    ViewBag.Title = "Home Page";
}



<!-- view anchor -->

<div id="viewport" class="row wrapper">

</div>




<!-- Sample ui states -->

<script type="text/html" id="Ready">
    <Button class="btn fa" data-bind="click: StartSomeProcess">Start new</Button>
</script>

<script type="text/html" id="Loading">
    Loading please wait.
</script>

<script type="text/html" id="Busy">
    Busy come back later.
</script>

<script type="text/html" id="Disconnected">
    Another window is open.
</script>

@section scripts
{
    <script src="~/Scripts/knockout-3.4.2.js"></script>
    <script src="~/Scripts/Custom/BaseViewModel.js"></script>

    <script src="~/Scripts/jquery.s-2.3.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <!-- Url rewrite in web.config,
        prod you may want this endpoint loadbalanced https://codeopinion.com/practical-asp-net-core-signalr-scaling/
        -->
    <script src="http://localhost:8080/signalr/hubs"></script>

    <script type="text/javascript">

        ViewModel = function(name, defaultState) {

            var self = this;
            self.state = ko.observable(defaultState); // string as current state which relates to template id.
            self.name = name;
            self.hub = null;
            //id of view model assuming scope to local storage, could be a table
            self.id = localStorage.getItem(name);
            if (self.id == null) {
                self.id = guid();
                localStorage.setItem(name, self.id);
            }
            console.log("my name is =>" + name + ", Id => " + self.id);

            self.assignState = function(state) {
                self.hub.server.assignState(this.id, state)
                    .done(function(state) {
                        self.state(state);
                        console.log("got model from server =>" + state);
                    });
            }


            $("body").on('model.updated.' + self.id,
                function(ev, state) {
                    self.state(state);
                    console.log("got model update =>" + state);
                });

            return self;
        }

        //Sample viewmodel for a buiness process.
        var BusinessProcess = function(name) {
            var self = new ViewModel(name, "Loading");

            self.StartSomeProcess = function(view) {
                $.ajax({
                    type: 'post',
                    url: '@Url.Action("StartSomeProcess")',
                    data: JSON.stringify({
                        id: view.id
                    }),
                    contentType: "application/json; charset=utf-8",
                    traditional: true,
                    success: function() {
                        view.assignState("Busy");
                        console.log("started");
                        view.state("Busy");
                        console.log("start model => Busy");
                    }
                });
            }


            return self;
        };


        $(document).ready(function() {
            var i = 0;

            $(function() {

                var notificationHub = $.connection.uINotificationHub;
                $.connection.hub.url = 'http://localhost:8080/signalr/hubs';

                var createViewModel = function() {
                    i++;
                    var viewModel = new BusinessProcess(i);
                    viewModel.hub = notificationHub;

                    $('#viewport').append($('<div id="container-' +
                        viewModel.id +
                        '"><div data-bind="dynaTemplate: state"></div></div>'));
                    var $vm = $('#container-' + viewModel.id);

                    ko.applyBindings(viewModel, $vm.get(0));
                    viewModel.assignState(null);
                    localStorage.setItem("loaded", i);

                    return viewModel;
                }

                notificationHub.client.notify = function(id, state) {
                    $("body").trigger('model.updated.' + id, [state]);
                };

                $.connection.hub.start().done(function() {


                    $("body").trigger('connection.ready', [notificationHub]);

                    for (var i = 0; i < 5; i++) {
                        createViewModel();
                    }
                });


            });


        });

    </script>

}